<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:sharding="http://shardingsphere.io/schema/shardingsphere/sharding"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd

        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd http://shardingsphere.io/schema/shardingsphere/sharding http://shardingsphere.io/schema/shardingsphere/sharding/sharding.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.tx"/>

    <!--<bean id="xxx" class="x.y.z" />
    <bean id="yyy" class="a.b.z" />

    <sharding:standard-strategy id="databaseShardingStrategy" sharding-column="xx" precise-algorithm-ref="xxx" />
    <sharding:standard-strategy id="tableShardingStrategy" sharding-column="xx" precise-algorithm-ref="yyy" />-->

    <sharding:inline-strategy id="databaseShardingStrategy" sharding-column="user_id"
                              algorithm-expression="sharding_${user_id % 2}"/>

    <sharding:standard-strategy id="studentShardingStrategy" sharding-column="age" precise-algorithm-ref="studentShardingStrategyAlgorithm" />

    <sharding:data-source id="shardingDataSource">
        <sharding:sharding-rule data-source-names="sharding_0, sharding_1">
            <sharding:table-rules>
                <!-- 分库分表配置 -->
                <!--<sharding:table-rule logic-table="t_user" actual-data-nodes="sharding_$->{0..1}.t_user$->{0..1}" table-strategy-ref="tableShardingStrategy"  database-strategy-ref="databaseShardingStrategy"
                                     generate-key-column-name="xxx"/>-->

                <sharding:table-rule logic-table="t_user" database-strategy-ref="databaseShardingStrategy"
                                     generate-key-column-name="id"/>
                <sharding:table-rule logic-table="t_student" actual-data-nodes="sharding_$->{0..1}.t_student_$->{0..2}" database-strategy-ref="databaseShardingStrategy"
                                     table-strategy-ref="studentShardingStrategy" generate-key-column-name="id"/>
            </sharding:table-rules>
        </sharding:sharding-rule>
    </sharding:data-source>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="shardingDataSource"/>
        <property name="mapperLocations" value="classpath:com/tx/mapper/*Mapper.xml"/>
    </bean>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tx.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

    <aop:config>
        <aop:advisor advice-ref="txAdvice" pointcut="execution(* com.tx.service..*(..))"/>
    </aop:config>

    <!-- 事务 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="shardingDataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" order="0"/>

</beans>